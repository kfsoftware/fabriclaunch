name: Build Application

env:
  REGISTRY: "ghcr.io"
  IMAGE_NAME: ${{ github.repository }}

on:
 # on branch main
  push:
    branches:
      - main


jobs:
  build-web-app:
    name: Build web app
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          # list of Docker images to use as base name for tags
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          # generate Docker tags based on the following events/attributes
          flavor: onlatest=false
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./apps/web/Dockerfile
          push: true
          build-args: |
            AUTH_SECRET_KEY=${{ secrets.AUTH_SECRET_KEY }}
            AUTH_SECRET=${{ secrets.AUTH_SECRET }}
            NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }}
            POSTGRES_URL=${{ secrets.POSTGRES_URL }}
            NEXT_PUBLIC_EXTERNAL_URL=${{ secrets.NEXT_PUBLIC_EXTERNAL_URL }}
            AUTH_DRIZZLE_URL=${{ secrets.AUTH_DRIZZLE_URL }}
            AUTH_URL=${{ secrets.AUTH_URL }}

            PASSWORD_SALT=${{ secrets.PASSWORD_SALT }}

            GH_CLIENT_ID=${{ secrets.GH_CLIENT_ID }}
            GH_CLIENT_SECRET=${{ secrets.GH_CLIENT_SECRET }}

            RESEND_API_KEY=${{ secrets.RESEND_API_KEY }}

            EMAIL_FROM=${{ secrets.EMAIL_FROM }}



            
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha, scope=${{ github.workflow }}
          cache-to: type=gha, mode=max, scope=${{ github.workflow }}
